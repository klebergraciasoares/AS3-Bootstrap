<?xml version="1.0" encoding="utf-8"?>
<project name="as3bootstrap" default="all" basedir="../" >
	
	<!-- PROPERTIES -->
	<property file="${basedir}/build/users/${user.name}.properties"/>
	<property file="${dir.build}/project.info"/>
	
	<echo message="build.properties: ${dir.build}/users/${user.name}.properties" />
	<echo message="project.info: ${dir.build}/project.info" />
	
	<!-- FLEX TASKS -->
	<taskdef resource="flexTasks.tasks" classpath="${FLEX_HOME}/ant/lib/flexTasks.jar" />
	<taskdef resource="flexUnitTasks.tasks">
	   <classpath>
	      <fileset dir="${dir.test.libs}">
	         <include name="flexUnitTasks*.jar" />
	      </fileset>
	   </classpath>
	</taskdef>

	<tstamp>  
		<format property="CURRENT_TIME" pattern="yyyyMMdd-hhmmss" locale="en,US"/>  
	</tstamp>
	
	<!--
		********************************************
		* COMPILE
		********************************************
	-->
	<target name="all" depends="precompile,compileswcs,postcompile" description="Perform all targets" />
	<target name="projectinfo" depends="">
		<buildnumber file="${dir.build}/build.number"/>
		<tstamp/>
		
		<echo message="============================================="/>
		<echo message="${project.name}-${project.version}-build.${build.number} [${TODAY}]"/>
		<echo message="OS : ${os.name}" />
		<echo message="============================================="/>
	</target>
	<target name="precompile" depends="compiletests,projectinfo,initcleanfiles,copyClasses" />
	<target name="compiletests" depends="runtests" />
	<target name="compileswcs" depends="bootstrap_standalone_spark, bootstrap_standalone_moxie, bootstrap_puremvc_flex_spark, bootstrap_puremvc_flex_moxie, bootstrap_robotlegs_spark, bootstrap_robotlegs_moxie" description="Compile all app swcs" />
	<target name="postcompile" depends="finishcleanfiles" />
	
	<!--
		********************************************
		* BUILD MANAGEMENT
		********************************************
	-->
	<target name="initcleanfiles" description="Initial delete of all pervious build output" >
    		<echo message="Removing previous build directories" />
			<delete dir="${dir.temp}" />
	</target>
	
	<target name="finishcleanfiles" description="Delete all files created for this build output" >
    		<echo message="Removing this sessions build directories" />
			<delete dir="${dir.temp}" />
	</target>
	
	<target name="copyClasses" description="Creates a temporary directory where the code will be copied to build from">
		<mkdir dir="${dir.temp}" />
		<copy todir="${dir.temp}">
			<fileset dir="${dir.classes}"/>
		</copy>
	</target>
	
	<!--
		********************************************
		* TEST SUITE
		********************************************
	-->
	
	<target name="runtests">
		<delete dir="${dir.test.report}" />
		<mkdir dir="${dir.test.report}" />
		<mxmlc 
			file="${dir.test.classes}/TestRunner.mxml" 
			static-rsls="true"
			output="${dir.test.bin}/TestRunner.swf">
			
			<source-path path-element="${dir.classes}" />
			<source-path path-element="${dir.test.classes}" />
						
			<library-path dir="${dir.libs}" append="true">
				<include name="*.swc" />
			</library-path>
			
			<library-path dir="${dir.test.libs}" append="true">
				<include name="*.swc" />
			</library-path>
			
			<compiler.verbose-stacktraces>true</compiler.verbose-stacktraces>
			<compiler.headless-server>true</compiler.headless-server>
		</mxmlc>
		
		<flexunit swf="${dir.test.bin}/TestRunner.swf" 
			toDir="${dir.test.report}" 
			haltonfailure="true" 
			verbose="true" 
			localTrusted="true" />
		
		<junitreport todir="${dir.test.report}">
			<fileset dir="${dir.test.report}">
				<include name="TEST-*.xml" />
			</fileset>
			<report format="frames" todir="${dir.test.report}/html" />
		</junitreport>
		
	</target>
	
	<!--
		********************************************
		* APPLICATIONS
		********************************************
	-->
	<target name="bootstrap_standalone_spark" depends="">
		<fileset id="classes.bs.sa.spark" dir="${dir.temp}">
			<exclude name="**/moxie/**/**.*" />
			<exclude name="org/**/**.*"/>
		</fileset>
		<property name="classes.bs.sa.spark" refid="classes.bs.sa.spark" />
		<pathconvert property="classes_standalone_spark" pathsep=" " refid="classes.bs.sa.spark">
			<compositemapper>
				<chainedmapper>
					<globmapper from="${dir.temp}/*" to="*" handledirsep="true" />
					<mapper type="package" from="*.as" to="*" />
				</chainedmapper>
				<chainedmapper>
					<globmapper from="${dir.temp}/*" to="*" handledirsep="true" />
					<mapper type="package" from="*.mxml" to="*" />
				</chainedmapper>
			</compositemapper>
		</pathconvert>
		
		<script language="javascript"> 
		   <![CDATA[
		   		var newFlexHome = as3bootstrap.getProperty( "FLEX_HOME_SPARK" );
				as3bootstrap.setProperty( "FLEX_HOME", newFlexHome );
		   ]]>
		</script>
		
		<echo message="Changed FLEX_HOME to: ${FLEX_HOME}" />
		<echo message="Building the bootstrap_standalone_spark.swc" />
		<echo message="${classes_standalone_spark}" />		
		
		<compc
			output="${dir.bin}/bootstrap_standalone_spark_v${project.version}.swc"
			include-classes="${classes_standalone_spark}"
			target-player="${app.player-version.spark}">
			
			<source-path path-element="${dir.temp}" />
			
			<external-library-path dir="${dir.libs}" append="true">
					<include name="as3-signals-v0.8.swc" />
			</external-library-path>
		</compc>
	</target>
	
	<target name="bootstrap_standalone_moxie" depends="">
		<fileset id="classes.bs.sa.moxie" dir="${dir.temp}">
			<exclude name="**/spark/**/**.*" />
			<exclude name="org/**/**.*"/>
		</fileset>
		<property name="classes.bs.sa.moxie" refid="classes.bs.sa.moxie" />
		<pathconvert property="classes_standalone_moxie" pathsep=" " refid="classes.bs.sa.moxie">
			<compositemapper>
				<chainedmapper>
					<globmapper from="${dir.temp}/*" to="*" handledirsep="true" />
					<mapper type="package" from="*.as" to="*" />
				</chainedmapper>
				<chainedmapper>
					<globmapper from="${dir.temp}/*" to="*" handledirsep="true" />
					<mapper type="package" from="*.mxml" to="*" />
				</chainedmapper>
			</compositemapper>
		</pathconvert>
		
		<script language="javascript"> 
		   <![CDATA[
		   		var newFlexHome = as3bootstrap.getProperty( "FLEX_HOME_MOXIE" );
				as3bootstrap.setProperty( "FLEX_HOME", newFlexHome );
		   ]]>
		</script>
				
		<echo message="Changed FLEX_HOME to: ${FLEX_HOME}" />
		<echo message="Building the bootstrap_standalone_moxie.swc" />
		<echo message="${classes_standalone_moxie}" />		
		
		<compc
			output="${dir.bin}/bootstrap_standalone_moxie_v${project.version}.swc"
			include-classes="${classes_standalone_moxie}"
			target-player="${app.player-version.moxie}">
			
			<source-path path-element="${dir.temp}" />
			
			<external-library-path dir="${dir.libs}" append="true">
					<include name="as3-signals-v0.8.swc" />
			</external-library-path>
		</compc>
	</target>
	
	<target name="bootstrap_puremvc_flex_spark" depends="">
		<fileset id="classes.bs.puremvc.spark" dir="${dir.temp}">
			<exclude name="**/moxie/**/**.*" />
			<exclude name="**/robotlegs/**/**.*"/>
		</fileset>
		<property name="classes.bs.puremvc.spark" refid="classes.bs.puremvc.spark" />
		<pathconvert property="classes_puremvc_spark" pathsep=" " refid="classes.bs.puremvc.spark">
			<compositemapper>
				<chainedmapper>
					<globmapper from="${dir.temp}/*" to="*" handledirsep="true" />
					<mapper type="package" from="*.as" to="*" />
				</chainedmapper>
				<chainedmapper>
					<globmapper from="${dir.temp}/*" to="*" handledirsep="true" />
					<mapper type="package" from="*.mxml" to="*" />
				</chainedmapper>
			</compositemapper>
		</pathconvert>
			
		<script language="javascript"> 
		   <![CDATA[
		   		var newFlexHome = as3bootstrap.getProperty( "FLEX_HOME_SPARK" );
				as3bootstrap.setProperty( "FLEX_HOME", newFlexHome );
		   ]]>
		</script>
				
		<echo message="Changed FLEX_HOME to: ${FLEX_HOME}" />
		<echo message="Building the bootstrap_puremvc_spark.swc" />
		<echo message="${classes_puremvc_spark}" />
					
		<compc
			output="${dir.bin}/bootstrap_puremvc_spark_v${project.version}.swc"
			include-classes="${classes_puremvc_spark}"
			target-player="${app.player-version.spark}">
			
			<source-path path-element="${dir.temp}" />
			
			<external-library-path file="${dir.libs}/as3-signals-v0.8.swc" append="true" />
			<external-library-path file="${dir.libs}/fabrication-flex.swc" append="true" />
			<external-library-path file="${dir.libs}/PureMVC_AS3_MultiCore_1_0_5.swc" append="true" />
			<external-library-path file="${dir.libs}/Utility_AS3_MultiCore_Pipes_1_1.swc" append="true" />
		</compc>
	</target>
	
	<target name="bootstrap_puremvc_flex_moxie" depends="">
		<fileset id="classes.bs.puremvc.moxie" dir="${dir.temp}">
			<exclude name="**/spark/**/**.*" />
			<exclude name="**/robotlegs/**/**.*"/>
		</fileset>
		<property name="classes.bs.puremvc.moxie" refid="classes.bs.puremvc.moxie" />
		<pathconvert property="classes_puremvc_moxie" pathsep=" " refid="classes.bs.puremvc.moxie">
			<compositemapper>
				<chainedmapper>
					<globmapper from="${dir.temp}/*" to="*" handledirsep="true" />
					<mapper type="package" from="*.as" to="*" />
				</chainedmapper>
				<chainedmapper>
					<globmapper from="${dir.temp}/*" to="*" handledirsep="true" />
					<mapper type="package" from="*.mxml" to="*" />
				</chainedmapper>
			</compositemapper>
		</pathconvert>
			
		<script language="javascript"> 
		   <![CDATA[
		   		var newFlexHome = as3bootstrap.getProperty( "FLEX_HOME_MOXIE" );
				as3bootstrap.setProperty( "FLEX_HOME", newFlexHome );
		   ]]>
		</script>
				
		<echo message="Changed FLEX_HOME to: ${FLEX_HOME}" />
		<echo message="Building the bootstrap_puremvc_moxie.swc" />
		<echo message="${classes_puremvc_moxie}" />
					
		<compc
			output="${dir.bin}/bootstrap_puremvc_moxie_v${project.version}.swc"
			include-classes="${classes_puremvc_moxie}"
			target-player="${app.player-version.moxie}">
			
			<source-path path-element="${dir.temp}" />
			
			<external-library-path file="${dir.libs}/as3-signals-v0.8.swc" append="true" />
			<external-library-path file="${dir.libs}/moxie/fabrication-flex-moxie.swc" append="true" />
			<external-library-path file="${dir.libs}/PureMVC_AS3_MultiCore_1_0_5.swc" append="true" />
			<external-library-path file="${dir.libs}/Utility_AS3_MultiCore_Pipes_1_1.swc" append="true" />
		</compc>
	</target>
	
	<target name="bootstrap_robotlegs_spark" depends="">
		<fileset id="classes.bs.robotlegs.spark" dir="${dir.temp}">
			<exclude name="**/moxie/**/**.*" />
			<exclude name="**/puremvc/**/**.*"/>
		</fileset>
		<property name="classes.bs.robotlegs.spark" refid="classes.bs.robotlegs.spark" />
		<pathconvert property="classes_robotlegs_spark" pathsep=" " refid="classes.bs.robotlegs.spark">
			<compositemapper>
				<chainedmapper>
					<globmapper from="${dir.temp}/*" to="*" handledirsep="true" />
					<mapper type="package" from="*.as" to="*" />
				</chainedmapper>
				<chainedmapper>
					<globmapper from="${dir.temp}/*" to="*" handledirsep="true" />
					<mapper type="package" from="*.mxml" to="*" />
				</chainedmapper>
			</compositemapper>
		</pathconvert>
			
		<script language="javascript"> 
		   <![CDATA[
		   		var newFlexHome = as3bootstrap.getProperty( "FLEX_HOME_SPARK" );
				as3bootstrap.setProperty( "FLEX_HOME", newFlexHome );
		   ]]>
		</script>
						
		<echo message="Changed FLEX_HOME to: ${FLEX_HOME}" />
		<echo message="Building the bootstrap_robotlegs_spark.swc" />
		<echo message="${classes_robotlegs_spark}" />
					
		<compc
			output="${dir.bin}/bootstrap_robotlegs_spark_v${project.version}.swc"
			include-classes="${classes_robotlegs_spark}"
			target-player="${app.player-version.spark}">
			
			<source-path path-element="${dir.temp}" />
			
			<external-library-path file="${dir.libs}/as3-signals-v0.8.swc" append="true" />
			<external-library-path file="${dir.libs}/robotlegs-framework-v1.4.0.swc" append="true" />
		</compc>
	</target>
	
	<target name="bootstrap_robotlegs_moxie" depends="">
		<fileset id="classes.bs.robotlegs.moxie" dir="${dir.temp}">
			<exclude name="**/spark/**/**.*" />
			<exclude name="**/puremvc/**/**.*"/>
		</fileset>
		<property name="classes.bs.robotlegs.moxie" refid="classes.bs.robotlegs.moxie" />
		<pathconvert property="classes_robotlegs_moxie" pathsep=" " refid="classes.bs.robotlegs.moxie">
			<compositemapper>
				<chainedmapper>
					<globmapper from="${dir.temp}/*" to="*" handledirsep="true" />
					<mapper type="package" from="*.as" to="*" />
				</chainedmapper>
				<chainedmapper>
					<globmapper from="${dir.temp}/*" to="*" handledirsep="true" />
					<mapper type="package" from="*.mxml" to="*" />
				</chainedmapper>
			</compositemapper>
		</pathconvert>
			
		<script language="javascript"> 
		   <![CDATA[
		   		var newFlexHome = as3bootstrap.getProperty( "FLEX_HOME_MOXIE" );
				as3bootstrap.setProperty( "FLEX_HOME", newFlexHome );
		   ]]>
		</script>
								
		<echo message="Changed FLEX_HOME to: ${FLEX_HOME}" />
		<echo message="Building the bootstrap_robotlegs_moxie.swc" />
		<echo message="${classes_robotlegs_moxie}" />
					
		<compc
			output="${dir.bin}/bootstrap_robotlegs_moxie_v${project.version}.swc"
			include-classes="${classes_robotlegs_moxie}"
			target-player="${app.player-version.moxie}">
			
			<source-path path-element="${dir.temp}" />
			
			<external-library-path file="${dir.libs}/as3-signals-v0.8.swc" append="true" />
			<external-library-path file="${dir.libs}/robotlegs-framework-v1.4.0.swc" append="true" />
		</compc>
	</target>
	
</project>
